# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with MV


    
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Enrich gradle.properties for CI/CD
env:
  GRADLE_OPTS: --no-daemon --stacktrace -Dorg.gradle.jvmargs="-Xmx3072m -Dfile.encoding=UTF-8 -XX:+HeapDumpOnOutOfMemoryError" -Dkotlin.daemon.jvm.options="-Xmx2560m" -Dkotlin.incremental=false

permissions:
  contents: read

jobs:
  build:
    defaults:
     run:
      working-directory: project
    runs-on: ubuntu-20.04
    
    # Allow all jobs on main and develop. Just one per PR.
    concurrency:
      group: ${{ github.ref == 'refs/heads/main' && format('unit-tests-main-{0}', github.sha) || github.ref == 'refs/heads/develop' && format('unit-tests-develop-{0}', github.sha) || format('unit-tests-{0}', github.ref) }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        include:
#           - nickname: win
#             os: windows-latest
#             graal: 22.3.0
#             musl: false
#           - nickname: macos
#             os: macos-latest
#             graal: 22.3.0
#             musl: false
          - nickname: linux
            os: ubuntu-latest
            graal: 22.3.0
            musl: true
            java: 17

    steps:
      - uses: actions/checkout@v3


      - name: Setup Java
        uses: actions/setup-java@v3
        with:
         cache: gradle
         distribution: temurin
         java-version: ${{matrix.java}}

      - name: Run tests
        run: ./gradlew  test
        shell: bash

      - name: Archive test report
        uses: actions/upload-artifact@v3
        with:
         name: test-results
         path: /tmp/deepsource
    outputs:
      relid: ${{ steps.versioninfo.outputs.pipeline_id }}
